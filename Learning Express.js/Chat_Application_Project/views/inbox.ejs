<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <link rel="stylesheet" href="/css/inbox.css" />
    <link
      rel="stylesheet"
      type="text/css"
      href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css"
    />
  </head>

  <body>
    <%- include('./partials/head.ejs') %>
    <div id="Form">
      
        <form id="addUserForm"> 
          <input type="text" id="nameInput" placeholder="Enter name" required />
          <input type="text" id="mobileInput" placeholder="Enter mobile" required />
          <button type="submit">Add User</button>
          <span onclick="show()">Go back</span>
        </form>

    </div>


    <div class="login">
      <div class="left">
        <button id="allusers" onclick="func2()">Allusers</button>
        <a href="#" id="addimg" title="Add user" onclick="show()">
          <img
            style="cursor: pointer"
            src="/images/Add-New-256.png"
            alt="add image"
          />
        </a>

        <div id="chat_users">
          <% if (users && users.length > 0) { %>
            <% users.forEach(user => { %>
              <!-- here -->
              <div style="cursor: pointer;" class="user" onclick='selectReceiver("<%= user.Tomobile %>", "<%= user.Toname %>")'>
                <% if (user.Toavatar) { %>
                  <img src="/uploads/avatars/<%= user.Toavatar %>" alt="chat users" />
                <% } else { %>
                  <img src="/uploads/avatars/no_person.jpg" alt="chat users" />
                <% } %>
                <p style="margin-top: 8px"><%= user.Toname %></p>
              </div>
              
          <% }) %>
          <% } else { %>
            <p id="no_user">No chat users found.Add users</p>
          <% } %>
          
          <!-- <title>Inbox</title> -->
        </div>
      </div>
      <div class="right">

        <div class="chat_head">
          <p><b id="userName">NoUser</b></p>
          <a title="remove chat" href="###"
            ><img src="/images/Garbage-Closed-256.png" alt="remove_chat"
          /></a>
        </div>

        <div class="messages">
          <p id="temp">Select a conversation</p>
          <!-- Messages will be dynamically loaded here -->
        </div>
        

        <div class="msg_form">
          <input type="text" id="user_message" placeholder="enter your message here"></input>
          <img id="send_btn" title="send message" src="/images/send.png" alt="send img">
        </div>

      </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script>
      const Form=document.getElementById('Form');
      const addimg=document.getElementById('addimg');
      const adduserform=document.getElementById('addUserForm');
      const nameInput=document.getElementById('nameInput');
      const mobileInput=document.getElementById('mobileInput');
      const chat_users=document.getElementById('chat_users');
      const userName=document.getElementById('userName');
      const messages=document.getElementsByClassName('messages')[0];
      const chat_head=document.getElementsByClassName('chat_head')[0];
      const msg_form=document.getElementsByClassName('msg_form')[0];
      const temp=document.getElementById('temp');
      let prevlength=0;

      const show=()=>{
        Form.style.display= Form.style.display==='flex'?'none':'flex';
      }

      adduserform.addEventListener('submit',(event)=>{
        event.preventDefault();
        const name=nameInput.value.trim();
        const mobile=mobileInput.value.trim();

        if(name && mobile){
          const encName=encodeURIComponent(name);
          const encMobile=encodeURIComponent(mobile);
          const link=`/inbox/addUser/${encName}/${encMobile}`;
          // window.location.href=link;

          Toastify({
            text: "User Added successfully.Click on Alluser to see the updated list",
            duration: 2000,
            gravity: "top",
            position: "right",
            style: {
              background: "linear-gradient(to right, #dc2f02, #e85d04,#f48c06)",
            },
          }).showToast();

          setTimeout(() => {
      window.location.href = link;
    }, 1000);

        }else{
          alert('Please fill in both fields.');
        }
      });

      const func2=()=>{
        chat_users.style.display=chat_users.style.display==='block'?
        'none':'block';
        // console.log('hi');
        const link=`/inbox/allusers`;
        window.location.href=link;
};

let selectedReceiver = null;
const ownMobile="<%= loggedInUser.mobile %>";

async function selectReceiver(mobile, name) {
  selectedReceiver = { mobile, name };
  userName.textContent = name;

  const own = encodeURIComponent(ownMobile);
  const other = encodeURIComponent(mobile);
  const link = `/inbox/chats?sender=${own}&receiver=${other}`;
  chat_head.style.display='flex';
  msg_form.style.display='flex';
  temp.style.display='none';

  try {
    const res = await fetch(link, {
      headers: {
        'X-Requested-With': 'XMLHttpRequest',
      }
    });

    if (!res.ok) throw new Error("Failed to fetch messages");

    const html = await res.text();
    document.querySelector('.messages').innerHTML = html;
  } catch (err) {
    console.error("Error loading chat messages:", err);
  }
}





const user_message=document.getElementById('user_message');
const send_btn=document.getElementById('send_btn');
const messagesContainer = document.querySelector(".messages");

const socket=io();


// socket.emit("register", currentUserMobile); // send your own number

send_btn.addEventListener("click", () => {
  const msg = user_message.value.trim();
  // console.log(msg);
  //  console.log(msg);
  //  console.log(selectedReceiver);
   
  if (msg !== "" && selectedReceiver) {
    socket.emit("one_message", {
      msg: msg,
      selectedReceiver: selectedReceiver,
    });
    user_message.value = "";
  }
});


// const ownMobile="<%= loggedInUser.mobile %>";
socket.emit("register", ownMobile);

socket.on('other_message', ({ msg, senderMobile }) => {
  const msgElement = document.createElement('p');
  msgElement.classList.add('message');

  if (senderMobile === ownMobile) {
    msgElement.classList.add('own-message');
  } else {
    msgElement.classList.add('other-message');
  }

  msgElement.textContent = msg;
  messagesContainer.appendChild(msgElement);
});



user_message.addEventListener("keyup", (event) => {
        if (event.key === "Enter") {
          send_btn.click();
        }
});


    
    </script>
  </body>
</html>
